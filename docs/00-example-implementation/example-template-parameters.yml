# The following parameters can be used to customize the Cache-Data implementation on a per-deployment basis.
# They can then be used to set the Lambda environment variables in the template.
# However, you can just as easily set these directly in the Lambda environment variables

Parameters:

  # ...

  # ---------------------------------------------------------------------------
  # Cache-Data Parameters
  # Most of these parameters are passed to Lambda Environment Variables
  # From: https://www.npmjs.com/package/@63klabs/cache-data

  CacheDataDynamoDbTableName:
    Type: String
    Description: "The DynamoDb table name to use for caching data. This is used by the 63klabs/cache-data package. If left blank, it will use the imported value from the Cache Data storage stack output."
    Default: ""
    AllowedPattern: "^[a-zA-Z0-9_.-]{3,255}$|^$"
    ConstraintDescription: "Blank to use ImportedValue, otherwise: Must be between 3 and 255 characters. Can contain alphanumeric characters, underscores, dashes, and periods."
  
  CacheDataS3BucketName:
    Type: String
    Description: "The S3 bucket name to use for caching data. This is used by the 63klabs/cache-data package. If left blank, it will use the imported value from the Cache Data storage stack output."
    Default: ""
    AllowedPattern: "^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$|^$"
    ConstraintDescription: "Blank to use ImportedValue, otherwise: Must be between 3 and 63 characters. Lower case alphanumeric and dashes. Must start and end with a letter or number."

  CacheDataTimeZoneForInterval:
    Type: String
    Description: "Cache-Data may expire using an interval such as every four, six, twelve, ... hours on the hour starting at midnight. What timezone holds the midnight to calculate from?"
    Default: "Etc/UTC"
    AllowedValues: ["Etc/UTC", "America/Puerto_Rico", "America/New_York", "America/Indianapolis", "America/Chicago", "America/Denver", "America/Phoenix", "America/Los_Angeles", "America/Anchorage", "Pacific/Honolulu"] # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
    ConstraintDescription: "Common examples for United States of America. Accepted values can be changed in the template for your region."

  CacheDataDbMaxCacheSizeInKB:
    Type: Number
    Description: "DynamoDb does better when storing smaller pieces of data. Choose the cut-off in KB that large objects should be stored in S3 instead (10)"
    Default: 10
    MinValue: 10
    MaxValue: 200
    ConstraintDescription: "Numeric value between 10 and 200 (inclusive)"

  CacheDataCryptIdHashAlgorithm:
    Type: String
    Description: "Hash algorithm used for generating the URI ID to identify cached requests. This is for generating IDs, not crypto."
    Default: "RSA-SHA256"
    AllowedValues: ["RSA-SHA256", "RSA-SHA3-224", "RSA-SHA3-256", "RSA-SHA3-384", "RSA-SHA3-512"]
    ConstraintDescription: "Use possible hashes available from Node.js in the RSA- category (RSA-SHA256 to RSA-SM3)"

  CacheDataCryptSecureDataAlg:
    Type: String
    Description: "Cryptographic algorithm to use for storing sensitive cached data in S3 and DynamoDb"
    Default: "aes-256-cbc"
    AllowedValues: ["aes-256-cbc", "aes-256-cfb", "aes-256-cfb1", "aes-256-cfb8", "aes-256-ofb"]
    ConstraintDescription: "Use possible cipher algorithms available (crypto.getCiphers()) from Node.js in the aes-256-xxx category"

  CacheDataErrorExpirationInSeconds:
    Type: Number
    Description: "How long should errors be cached? This prevents retrying a service that is currenlty in error too often (300 is recommended)"
    Default: 300
    MinValue: 1
    ConstraintDescription: "Choose a value of 1 or greater"

  CacheDataPurgeExpiredCacheEntriesInHours:
    Type: Number
    Description: "The number of hours expired cached data should be kept before purging. Expired cache data may be used if the source returns an error."
    Default: 24
    MinValue: 1
    ConstraintDescription: "Choose a value of 1 or greater"

  CacheDataPurgeAgeOfCachedBucketObjInDays:
    Type: Number
    Description: "Similar to CacheData_PurgeExpiredCacheEntriesInHours, but for the S3 Bucket. S3 calculates from time object is created/last modified (not accessed). This should be longer than your longest cache expiration set in custom/policies. Keeping objects in S3 for too long increases storage costs. (30 is recommended)"
    Default: 15
    MinValue: 3
    ConstraintDescription: "Choose a value of 3 days or greater. This should be slightly longer than the longest cache expiration expected"

  CacheDataAWSXRayOn:
    Type: String
    Description: "Turn on AWS XRay tracing for Cache-Data"
    Default: "true"
    AllowedValues: ["true", "false"]
    ConstraintDescription: "Accepted values are true or false"

# -------------------------------------------
# Example of using imported values

Conditions:
  HasCacheDataDynamoDbTableName: !Not [!Equals [!Ref CacheDataDynamoDbTableName, ""]]
  HasCacheDataS3BucketName: !Not [!Equals [!Ref CacheDataS3BucketName, ""]]

Resources:

  # -- Lambda Function --
  AppFunction:
    Type: AWS::Serverless::Function
    Properties:

      # ... function properties ...

      Environment:
        Variables:
                    
          # Cache-Data settings (from: https://www.npmjs.com/package/@63klabs/cache-data)
          CACHE_DATA_TIME_ZONE_FOR_INTERVAL: !Ref CacheDataTimeZoneForInterval # Cache-Data may expire using an interval such as every four, six, twelve, ... hours on the hour starting at midnight. What timezone holds the midnight to calculate from?
          CACHE_DATA_AWS_X_RAY_ON: !Ref CacheDataAWSXRayOn # Enable X-Ray tracing for Cache-Data
          CACHE_DATA_DYNAMO_DB_TABLE: !If 
            - HasCacheDataDynamoDbTableName
            - !Ref CacheDataDynamoDbTableName
            - Fn::ImportValue:
                'Fn::Sub': '${Prefix}-CacheDataDynamoDbTable' # relies on the Cache Data storage stack output
          CACHE_DATA_S3_BUCKET: !If 
            - HasCacheDataS3BucketName
            - !Ref CacheDataS3BucketName
            - Fn::ImportValue:
                'Fn::Sub': '${Prefix}-CacheDataS3Bucket' # relies on the Cache Data storage stack output
